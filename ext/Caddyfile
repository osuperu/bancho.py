# Comment this out if you need to explicitly
# use self-signed certs.
# NOTE: Not necessary if using a '.local' domain
#
# {
# 	local_certs
# }

c.{$DOMAIN}, ce.{$DOMAIN}, c4.{$DOMAIN}, osu.{$DOMAIN}, b.{$DOMAIN}, api.{$DOMAIN}, a.{$DOMAIN} {
	encode gzip

	@preflight method OPTIONS
	handle @preflight {
		header Access-Control-Allow-Origin "{http.request.header.Origin}"
		header Access-Control-Allow-Credentials "true"
		header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
		header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
		respond "" 204
	}

	handle {
		header Access-Control-Allow-Origin "{http.request.header.Origin}"
		header Access-Control-Allow-Credentials "true"

		reverse_proxy 127.0.0.1:{$APP_PORT} {
			header_up X-Real-IP {remote_host}
			header_up X-Forwarded-For {remote_host}
			header_up Host {host}
			header_up X-Forwarded-Proto {scheme}
		}
	}

	request_body {
		max_size 100MB
	}
}

assets.{$DOMAIN} {
	encode gzip
	root * {$ASSETS_DIRECTORY}
	file_server
}

# Development frontend server
#import {$FRONTEND_DIRECTORY}/ext/Caddyfile
